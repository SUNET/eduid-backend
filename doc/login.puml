@startuml
title login

legend
    WEBAUTHN_RESPONSE: {
        "credentialId": base64_str,
        "authenticatorData": base64_str,
        "clientDataJSON": base64_str,
        "signature": base64_str,
    }
end legend

Client->"/next": POST {"ref": reference}
alt Not logged in
    "/next"->Client: {"payload":{"action": "USERNAMEPASSWORD", "target": "/pw_auth"}, "type":"POST_LOGIN_NEXT_SUCCESS"}
else ToU acceptance required
    "/next"->Client: {"payload":{"action": "TOU", "target": "/tou"}, "type":"POST_LOGIN_NEXT_SUCCESS"}
else MFA required
    "/next"->Client: {"payload":{"action": "MFA", "target": "/mfa_auth"}, "type":"POST_LOGIN_NEXT_SUCCESS"}
else Finished
    "/next"->Client: {"payload":{"action": "FINISHED", "target": "https://..."}, "type":"POST_LOGIN_NEXT_SUCCESS"}
else Login not possible
    "/next"->Client: {"error": true, "payload": {"message": "login.some_error"},"type": "POST_LOGIN_NEXT_FAIL"}
end
|||

Client->"/pw_auth": POST {"ref": reference, "username": username, "password", password}
alt Correct
    "/pw_auth"->Client: {"payload": {"finished": true}, "type": "POST_LOGIN_USERNAMEPW_SUCCESS"}
else Not correct
    "/pw_auth"->Client: {"error": true, "payload": {"message": "login.pw_auth_incorrect}, "type": "POST_LOGIN_USERNAMEPW_FAIL"}
end
|||

Client->"/tou": POST {"ref": reference, "versions": ["2016-v1", "2021-v1"]}
alt Version acceptable to backend present
    "/tou"->Client: {"payload": {"finished": false, "version": version}, "type": "POST_LOGIN_TOU_SUCCESS"}
else No acceptable version present
    "/tou"->Client: {"error": true, "payload": {"message": "login.tou_not_acceptable"},"type": "POST_LOGIN_TOU_FAIL"}
end


Client->"/tou": POST {"ref": reference, "user_accept": true, "version": version}
alt Acceptable
    "/tou"->Client: {"payload": {"finished": true}, "type": "POST_LOGIN_TOU_SUCCESS"}
else Not acceptable
    "/tou"->Client: {"error": true, "payload": {"message": "login.tou_not_acceptable"},"type": "POST_LOGIN_TOU_FAIL"}
end
|||

Client->"/mfa_auth": POST {"ref": reference}
alt User has one or more Security keys
    "/mfa_auth"->Client: {"payload": {"finished": false, "webauthn_options": {"publicKey": ...}}, "type": "POST_LOGIN_MFA_SUCCESS"}
else User has no security keys, third party MFA login still possible
    "/mfa_auth"->Client: {"payload": {"finished": false}, "type": "POST_LOGIN_MFA_SUCCESS"}
end

Client->"/mfa_auth": POST {"ref": reference, webauthn_response: WEBAUTHN_RESPONSE"}
alt Success
    "/mfa_auth"->Client: {"payload": {"finished": true}, "type": "POST_LOGIN_MFA_SUCCESS"}
else Credential validation failure
    "/mfa_auth"->Client: {"error": true, "payload": {"message": ...}, "type": "POST_LOGIN_MFA_FAIL"}
end


@enduml
