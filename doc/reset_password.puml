@startuml
title reset_password

legend
    VERIFY_EMAIL_RESPONSE: {
        "email_address": str,
        "email_code": str,
        "extra_security": {
            "phone_numbers": [
                {
                    "index": int,
                    "number": str,
                }
            ],
            "tokens": {
                "webauthn_options": str
            }
        },
        "password_entropy": int,
        "password_length": int,
        "password_service_url": str,
        "success": bool,
        "suggested_password": str,
        "zxcvbn_terms": [str]
    }
end legend

Client->"/": GET
"/"->Client: {"payload": {}, "type": "GET_RESET_PASSWORD_SUCCESS"}
|||
Client->"/": POST {"email": str, "csrf_token": str}
alt User exists
"/"->Client: {"payload": {"message": "resetpw.reset-pw-initialized", "success": true}, 'type': "POST_RESET_PASSWORD_SUCCESS"}
else User does not exist
"/"->Client: {"payload": {"message": "resetpw.user-not-found", "success": false}, 'type': "POST_RESET_PASSWORD_FAIL"}
else User has recently sent an email
"/"->Client: {"payload": {"message": "resetpw.email-throttled", "success": false}, 'type': "POST_RESET_PASSWORD_FAIL"}
else User has not completed signup
"/"->Client: {"payload": {"message": "resetpw.invalid_user", "success": false}, 'type': "POST_RESET_PASSWORD_FAIL"}
else Error sending mail
"/"->Client: {"payload": {"message": "resetpw.email-send-failure", "success": false}, 'type': "POST_RESET_PASSWORD_FAIL"}
end
|||
Client->"/verify-email/": POST {"email_code": str}
alt State for email code is found
    "/verify-email/"->Client: {"payload": VERIFY_EMAIL_RESPONSE, 'type': "POST_RESET_PASSWORD_VERIFY_EMAIL_SUCCESS"}
else State for email code is not found
    "/verify-email/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_VERIFY_EMAIL_FAIL"}
else User does not exist
    "/verify-email/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_VERIFY_EMAIL_FAIL"}
else Email code is expired
    "/verify-email/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_VERIFY_EMAIL_FAIL"}
else Phone code is expired
    "/verify-email/"->Client: {"error": true, "payload": {"message": "resetpw.expired-phone-code", "success": false},"type":"POST_RESET_PASSWORD_VERIFY_EMAIL_FAIL"}
end
|||
Client->"/new-password/": POST {"email_code": str, "password": str}
alt State for email code is found and password is ok
    "/new-password/"->Client: {"payload": {"message": "resetpw.pw-reset-success", "type": "POST_RESET_PASSWORD_NEW_PASSWORD_SUCCESS"}
else Password is weak
    "/new-password/"->Client: {"error": true, "payload": {"message": "resetpw.weak-password", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_FAIL"}
else State for email code is not found
    "/new-password/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_FAIL"}
else User does not exist
    "/new-password/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_FAIL"}
else Email code is expired
    "/new-password/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_FAIL"}
else Password reset fail in VCCS backend
    "/new-password/"->Client: {"error": true, "payload": {"message": "resetpw.pw-reset-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_FAIL"}
end
|||
Client->"/extra-security-phone/": POST {"email_code": str, "phone_index": int}
alt State for email code is found and phone number at index exists
    "/extra-security-phone/"->Client: {"payload": {"message": "resetpw.send-sms-success", "type": "POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_SUCCESS"}
else Phone number at index does not exists
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.phone-number-unknown", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else State for email code is not found
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else User does not exist
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Email code is expired
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Phone code is expired
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.expired-phone-code", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Email address not validated
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.email-not-validated", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else SMS sending throttled
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.sms-throttled", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Sending SMS failed
    "/extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.send-sms-failed", "success": false},"type":"POST_RESET_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
end
|||
Client->"/new-password-extra-security-phone/": POST {"email_code": str, "phone_code": str, "password": str}
alt State for email code is found password and phone code is ok
    "/new-password-extra-security-phone/"->Client: {"payload": {"message": "resetpw.pw-reset-success", "type": "POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_SUCCESS"}
else Password is weak
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.weak-password", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else State for email code is found but phone code is not ok
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.phone-code-unknown", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else The phone number used is no longer verified for user
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.phone-invalid", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else State for email code is not found
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else User does not exist
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Email code is expired
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
else Password reset fail in VCCS backend
    "/new-password-extra-security-phone/"->Client: {"error": true, "payload": {"message": "resetpw.pw-reset-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_PHONE_FAIL"}
end
|||
Client->"/new-password-extra-security-token/": POST {"email_code": str, "password": str, "tokenResponse": str, "authenticatorData": str, "clientDataJSON": str, "credentialId": str}
alt State for email code is found, password and token is ok
    "/new-password-extra-security-token/"->Client: {"payload": {"message": "resetpw.pw-reset-success", "type": "POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_SUCCESS"}
else Password is weak
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.weak-password", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
else Token is not ok
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.fido-token-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
else State for email code is not found
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
else User does not exist
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
else Email code is expired
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
else Password reset fail in VCCS backend
    "/new-password-extra-security-token/"->Client: {"error": true, "payload": {"message": "resetpw.pw-reset-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_TOKEN_FAIL"}
end
|||
Client->"/new-password-extra-security-external-mfa/": POST {"email_code": str, "password": str}
alt State for email code is found, password and external mfa is ok
    "/new-password-extra-security-external-mfa/"->Client: {"payload": {"message": "resetpw.pw-reset-success", "type": "POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_SUCCESS"}
else Password is weak
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.weak-password", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
else External MFA is not ok
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.external-mfa-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
else State for email code is not found
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.state-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
else User does not exist
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.user-not-found", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
else Email code is expired
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.expired-email-code", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
else Password reset fail in VCCS backend
    "/new-password-extra-security-external-mfa/"->Client: {"error": true, "payload": {"message": "resetpw.pw-reset-fail", "success": false},"type":"POST_RESET_PASSWORD_NEW_PASSWORD_EXTRA_SECURITY_EXTERNAL_MFA_FAIL"}
end
@enduml
